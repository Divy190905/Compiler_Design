
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA EQUALS FROM GREATER GREATEREQUAL IDENTIFIER LESS LESSEQUAL NUMBER OR SELECT SEMICOLON STAR STRING WHEREquery : SELECT select_list FROM table where_clause_opt SEMICOLON\n| SELECT select_list FROM table where_clause_optselect_list : STARselect_list : column_listcolumn_list : column_list COMMA IDENTIFIER\n| IDENTIFIERtable : IDENTIFIERwhere_clause_opt : WHERE condition\n| emptycondition : condition AND condition\n| condition OR condition\n| simple_conditionsimple_condition : IDENTIFIER EQUALS value\n| IDENTIFIER GREATER value\n| IDENTIFIER LESS value\n| IDENTIFIER GREATEREQUAL value\n| IDENTIFIER LESSEQUAL valuevalue : NUMBER\n| STRINGempty :'
    
_lr_action_items = {'SELECT':([0,],[2,]),'$end':([1,9,10,12,14,15,16,17,26,27,28,29,30,31,32,33,34,],[0,-20,-7,-2,-9,-1,-8,-12,-10,-11,-13,-18,-19,-14,-15,-16,-17,]),'STAR':([2,],[4,]),'IDENTIFIER':([2,7,8,13,19,20,],[6,10,11,18,18,18,]),'FROM':([3,4,5,6,11,],[7,-3,-4,-6,-5,]),'COMMA':([5,6,11,],[8,-6,-5,]),'WHERE':([9,10,],[13,-7,]),'SEMICOLON':([9,10,12,14,16,17,26,27,28,29,30,31,32,33,34,],[-20,-7,15,-9,-8,-12,-10,-11,-13,-18,-19,-14,-15,-16,-17,]),'AND':([16,17,26,27,28,29,30,31,32,33,34,],[19,-12,19,19,-13,-18,-19,-14,-15,-16,-17,]),'OR':([16,17,26,27,28,29,30,31,32,33,34,],[20,-12,20,20,-13,-18,-19,-14,-15,-16,-17,]),'EQUALS':([18,],[21,]),'GREATER':([18,],[22,]),'LESS':([18,],[23,]),'GREATEREQUAL':([18,],[24,]),'LESSEQUAL':([18,],[25,]),'NUMBER':([21,22,23,24,25,],[29,29,29,29,29,]),'STRING':([21,22,23,24,25,],[30,30,30,30,30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'query':([0,],[1,]),'select_list':([2,],[3,]),'column_list':([2,],[5,]),'table':([7,],[9,]),'where_clause_opt':([9,],[12,]),'empty':([9,],[14,]),'condition':([13,19,20,],[16,26,27,]),'simple_condition':([13,19,20,],[17,17,17,]),'value':([21,22,23,24,25,],[28,31,32,33,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> SELECT select_list FROM table where_clause_opt SEMICOLON','query',6,'p_query','simplified_query_parser.py',53),
  ('query -> SELECT select_list FROM table where_clause_opt','query',5,'p_query','simplified_query_parser.py',54),
  ('select_list -> STAR','select_list',1,'p_select_list_star','simplified_query_parser.py',64),
  ('select_list -> column_list','select_list',1,'p_select_list_columns','simplified_query_parser.py',68),
  ('column_list -> column_list COMMA IDENTIFIER','column_list',3,'p_column_list','simplified_query_parser.py',72),
  ('column_list -> IDENTIFIER','column_list',1,'p_column_list','simplified_query_parser.py',73),
  ('table -> IDENTIFIER','table',1,'p_table','simplified_query_parser.py',80),
  ('where_clause_opt -> WHERE condition','where_clause_opt',2,'p_where_clause_opt','simplified_query_parser.py',84),
  ('where_clause_opt -> empty','where_clause_opt',1,'p_where_clause_opt','simplified_query_parser.py',85),
  ('condition -> condition AND condition','condition',3,'p_condition','simplified_query_parser.py',89),
  ('condition -> condition OR condition','condition',3,'p_condition','simplified_query_parser.py',90),
  ('condition -> simple_condition','condition',1,'p_condition','simplified_query_parser.py',91),
  ('simple_condition -> IDENTIFIER EQUALS value','simple_condition',3,'p_simple_condition','simplified_query_parser.py',98),
  ('simple_condition -> IDENTIFIER GREATER value','simple_condition',3,'p_simple_condition','simplified_query_parser.py',99),
  ('simple_condition -> IDENTIFIER LESS value','simple_condition',3,'p_simple_condition','simplified_query_parser.py',100),
  ('simple_condition -> IDENTIFIER GREATEREQUAL value','simple_condition',3,'p_simple_condition','simplified_query_parser.py',101),
  ('simple_condition -> IDENTIFIER LESSEQUAL value','simple_condition',3,'p_simple_condition','simplified_query_parser.py',102),
  ('value -> NUMBER','value',1,'p_value','simplified_query_parser.py',106),
  ('value -> STRING','value',1,'p_value','simplified_query_parser.py',107),
  ('empty -> <empty>','empty',0,'p_empty','simplified_query_parser.py',111),
]
